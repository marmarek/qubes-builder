#!/usr/bin/env python

from __future__ import print_function

import tempfile
import io
import sys
import os
import errno
import shutil
import subprocess
from datetime import datetime

def sanitize_line(untrusted_line):
    line = bytearray(untrusted_line)
    for i, c in enumerate(line):
        if c >= 0x20 and c <= 0x7e:
            pass
        else:
            line[i] = 0x2e
    return bytearray(line).decode('ascii')

sys.stdin = io.open(0, 'rb')

start = datetime.utcnow()

tmp_log = tempfile.NamedTemporaryFile(prefix="qubes-build-log_", delete=False)

qrexec_remote = os.getenv('QREXEC_REMOTE_DOMAIN')
if not qrexec_remote:
    print('ERROR: QREXEC_REMOTE_DOMAIN not set', file=sys.stderr)
    sys.exit(1)


def log(msg, remote=True, now=datetime.utcnow()):
    if remote:
        remote_str = '{}:'.format(qrexec_remote)
    else:
        remote_str = '>'

    line = '{:%Y-%m-%d %H:%M:%S.%f} {} {}\n'.format(now, remote_str, msg)

    tmp_log.write(line.encode('utf-8'))

log('starting log', now=start, remote=False)

while True:
    untrusted_line = sys.stdin.readline()
    if untrusted_line == b'':
        break

    log(sanitize_line(untrusted_line.rstrip(b'\n')))


log('closing log', remote=False)
tmp_log.close()

file_name_base = ('{home}/QubesIncomingBuildLog/{remote}/'
        '{remote}_{time:%Y-%m-%d_%H-%M-%S}').format(
                home=os.getenv('HOME', '/'),
                remote=qrexec_remote,
                time=start)

try:
    os.makedirs(os.path.dirname(file_name_base))
except OSError as err:
    if err.errno != errno.EEXIST:
        raise

try_no = 0
while True:
    if try_no == 0:
        file_name = file_name_base
    else:
        file_name = '{}.{}'.format(file_name_base, try_no)

    try:
        fd = os.open(file_name, os.O_CREAT | os.O_EXCL, 0o664)
    except OSError as err:
        if err.errno == errno.EEXIST:
            try_no += 1
            continue
        raise

    os.close(fd)
    break

shutil.move(tmp_log.name, file_name)

# at the end execute post-log-hook if exists, for possible log uploading
hook_path = '{}/QubesIncomingBuildLog/post-log-hook'.
    format(os.getenv('HOME', '/'))
if os.path.exists('{}/QubesIncomingBuildLog/post-log-hook'.
        format(os.getenv('HOME', '/'))):
    # connect I/O to /dev/null, as we're running as qrexec service, so that
    # would be sent to the remote domain
    subprocess.check_call([hook_path, file_name],
        stdout=open(os.devnull, 'w'), stderr=open(os.devnull, 'w'),
        stdin=open(os.devnull, 'r'))
